version: 2.1

jobs:
  build-and-test:
    executor:
      name: node/default
      tag: '14.15.1'
    steps:
      - checkout
      - run: npm install
      - run: npm run build
      - run: npm run lint
      - run: npm run test:local

  integration-test:
    machine:
      docker_layer_caching: true
      image: ubuntu-2004:202201-02
    steps:
      - checkout
      - run:
          name: setup shell environment
          command: |
            cp dummy.env .env
            echo ' [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"' >> $BASH_ENV
      - run:
          name: node npm setup
          command: |
              nvm install v14.15.1
              nvm alias default v14.15.1
              npm install
      - run:
          name: Start postgres docker compose and wait for readiness
          command: |
            docker-compose build
            docker-compose up -d
            sleep 15
      - run:
          name: Run tests
          command: |
            if ! npm run test:integration ; then
              echo "Tests failed. Server logs:";
              docker-compose logs;
              exit 1;
            fi
      - run:
          name: Run tests
          command: |
            npm run test

  push-to-dev:
    machine:
      image: ubuntu-2004:202201-02
    parameters:
      tag:
        default: latest
        description: Tag of protocol-reporting to push to dev
        type: string
    steps:
      - checkout
      - kube-orb/install
      - kube-orb/install-kubeconfig:
          kubeconfig: KUBECONFIG_BASE64
      - aws-eks/install-aws-iam-authenticator
      - helm/install-helm-client:
          version: v3.2.4
      - run:
          name: Deploy to dev cloud
          command: helm upgrade --install protocol-reporting helm-config --set image.tag=<<parameters.tag>>

workflows:
  build-test-deploy:
    jobs:
      - build-and-test:
          filters: # run for all branches AND tags
            tags:
              only: /.*/
      - integration-test:
          requires:
            - build-and-test
          filters: # run for all branches AND tags
            tags:
              only: /.*/
      - docker/publish:
          requires:
            - build-and-test
            - integration-test
          filters: # only run for semver tagged versions
            tags:
              only: /^([0-9]+)\.([0-9]+)\.([0-9]+)/
            branches:
              ignore: /.*/
          update-description: true
          dockerfile: Dockerfile.production
          image: kivaprotocol/protocol-reporting
          tag: << pipeline.git.tag >>,latest
      - push-to-dev:
          context:
            - continuous-deployment-dev
          requires:
            - docker/publish
          filters: # only run for semver tagged versions
            tags:
              only: /^([0-9]+)\.([0-9]+)\.([0-9]+)/
            branches:
              ignore: /.*/
          tag: << pipeline.git.tag >>

orbs:
  node: circleci/node@4.1.0
  docker: circleci/docker@1.3.0
  kube-orb: circleci/kubernetes@0.11.1
  aws-eks: circleci/aws-eks@1.0.1
  helm: circleci/helm@1.2.0
