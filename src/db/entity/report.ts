import { Column, CreateDateColumn, Entity, Index, PrimaryGeneratedColumn, Unique } from 'typeorm';

@Unique(['request_id'])
@Entity()
export class Report {

    /**
     * For simplicity we have an autogenerated integer id
     */
    @PrimaryGeneratedColumn()
    id!: number;

    /**
     * Timestamp report row recorded
     */
    @Index()
    @CreateDateColumn({ type: 'timestamp with time zone' })
    create_time!: Date;

    /**
     * The auth method used to start the credential exchange, eg FINGERPRINT, SMS_OTP, etc
     */
    @Index()
    @Column({ type: 'varchar' })
    auth_method: string;

    /**
     * The id of the verifier, eg FSP id
     */
    @Index()
    @Column({ type: 'varchar' })
    verifier_id: string;

    /**
     * The user id on the verifier's side who initiated the credential exchange, eg the FSP teller auth id
     */
    @Index()
    @Column({ type: 'varchar' })
    verifier_user_id: string;

    /**
     * The id of the request (this is generated by the client or the gateway)
     */
     @Index()
     @Column({ type: 'varchar', unique: true })
     request_id: string;

    /**
     * The id of the session, ie a full exchange interaction with a single entity, which may include multiple requests
     */
     @Index()
     @Column({ type: 'varchar' })
     session_id: string;

    /**
     * The error, warning or info code of the result, eg FINGERPRINT_MISMATCH, SUCCESS, etc
     */
     @Index()
     @Column({ type: 'varchar' })
     result_code!: string;

    /**
     * Boolean value if exchange was successful
     */
     @Index()
     @Column({ type: 'boolean' })
     success!: boolean;
}
